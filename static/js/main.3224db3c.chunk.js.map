{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleDocumentPressedKey","event","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,2BAFT,EAaEC,yBAA2B,SAACC,GAC1B,EAAKC,SAAS,CAAEH,IAAI,4BAAD,OAA8BE,EAAMF,IAApC,QAdvB,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,4BAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,4BAV/C,oBAiBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKP,MAAMC,YArBtB,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.3224db3c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface State {\n  key: string;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    key: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentPressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentPressedKey);\n  }\n\n  handleDocumentPressedKey = (event: KeyboardEvent) => {\n    this.setState({ key: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}